plugins {
    id 'idea'
    id 'org.gradle.java'
    id "io.qameta.allure" version "2.5"
    id "com.adarshr.test-logger" version "1.6.0"
    id 'nu.studer.jooq' version '3.0.3'
}


group 'test.task'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

configurations {
    agent
}

dependencies {
    agent "org.aspectj:aspectjweaver:${aspectjVersion}"
    compile "io.qameta.allure:allure-testng:${allureTestngVersion}"
    compile "io.rest-assured:rest-assured:${restAssuredVersion}"
    compile "org.projectlombok:lombok:${lombokVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "io.qameta.allure:allure-rest-assured:${allureRestAssuredVersion}"
    compile "org.assertj:assertj-core:${assertjVersion}"
    compile "org.jooq:jooq:${jooqVersion}"
    compile "org.jooq:jooq-codegen:${jooqVersion}"
    compile "org.jooq:jooq-meta:${jooqVersion}"
    compile "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"
    jooqRuntime "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"
    testCompile "org.testng:testng:${testNgVersion}"
    testCompile "org.awaitility:awaitility:${awaitilityVersion}"
}

allure {
    aspectjweaver = true
    version = '2.7.0'
    resultsDir = file('build/allure-results')
    reportDir = file('build/allure-reports')
    downloadLink = 'https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.7.0/allure-2.7.0.zip'

}

testlogger {
    showPassed true
    showSkipped true
    showFailed true
    theme 'mocha-parallel'
    showStandardStreams true
}

test {

    minHeapSize = "512m"
    maxHeapSize = "1024m"


    def iHost = System.properties['serviceHost']
    if (iHost) systemProperty 'serviceHost', iHost


    def iPort = System.properties["servicePort"]
    if (iPort) systemProperty 'servicePort', iPort

    def dbPath = System.properties['dbPath']
    if (dbPath) systemProperty 'dbPath', dbPath


    println "-------------------------------------------------------------"
    println "Service Host      : " + System.getProperty("serviceHost")
    println "Service Api Port  : " + System.getProperty("servicePort")
    println "Sqlite Path    : " + System.getProperty("dbPath")
    println "-------------------------------------------------------------"

    useTestNG() {
        suites("src/test/resources/rest-tests.xml")

        String group = System.properties["includeGroup"]

        if (group) {
            includeGroups(group)
        }

        reports.html.enabled = false
        useDefaultListeners = false
    }

    testLogging.showStandardStreams = true
    finalizedBy("downloadAllure")
    finalizedBy("allureServe")
}


jooq {
    version = "${jooqVersion}"
    edition = 'OSS'

    dev(sourceSets.main) {
        jdbc {
            driver = 'org.sqlite.JDBC'
            url = "jdbc:sqlite:" + System.getProperty("dbPath")
        }

        generator {
            name = 'org.jooq.codegen.JavaGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.sqlite.SQLiteDatabase'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'superservice.db'
                directory = 'src/main/java'
            }
        }
    }
}

repositories {
    mavenCentral()
}

